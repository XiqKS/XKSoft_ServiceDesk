@import url("global-styles.css");

html {
    font-size: 150%;
}

body {
    display: flex;
    justify-content: center; /* Centers horizontally */
    align-items: center; /* Centers vertically */
    min-height: 100vh; /* Ensures the body takes at least the full viewport height */
    margin: 0; /* Resets any default margin */
}

/* Base styles for smaller devices */
.main-container {
    position: relative;
    display: grid;
    grid-template-columns: minmax(auto, 1fr) 2fr 2fr minmax(auto, 1fr);
    grid-template-rows: auto 1fr auto; /* Top, middle, bottom rows */
    gap: 1em;
    padding: 1em;
    box-sizing: border-box;
    overflow: visible;
}

.top-left-icon {
    grid-column: 1 / 2;
    grid-row: 1;
    width: 2.5em; /* Makes the icon's width 10% of its container's width */
    height: auto; /* Maintains the aspect ratio of the image */
}

.darkmode-toggle-container {
    grid-column: 4 / 5;
    grid-row: 1;
    justify-self: end;
}

.login-link {
    grid-column: 1 / span 2; /* Spans below the main-content */
    grid-row: 3; /* Automatically places it in the next available row */
    height: 1.5rem;
}

.login-link p {
    margin: 0;
}

.next-button {
    grid-column: 4 / 5;
    grid-row: 3;
    justify-self: end;
    width: 100%;
}

.main-content {
    grid-column: 2 / span 2;
    grid-row: 1 / span 2;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    text-align: center;
}

.symbol {
    padding-right: 5px; /* Adjust spacing */
}

.valid {
    color: green; /* Style for valid condition */
}

.invalid {
    color: red; /* Style for invalid condition */
}

.hideField {
    display: none;
}

.relative-container {
    position: relative; /* Creates a positioning context for absolutely positioned children */
    margin: -0.5rem 0;
    padding: 0;
}

h1, h2 {
    margin: 0;
}
h2 {
    margin-top: -1rem;
}

ul {
    list-style-type: none; /* Removes the bullet points */
    padding-left: 0; /* Removes the default padding */
    margin-left: 0; /* Ensures there's no margin on the left */
}

input {
    width: 22rem;
    height: 1.25rem;
}

/* Wrapper specifically for the loading bar to restrict its overflow */
.loading-bar-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%; /* Fill the container */
    height: 100%; /* Fill the container */
    border-radius: inherit; /* Match the container's border-radius */
    overflow: hidden; /* Hide overflow, respecting the border-radius */
    pointer-events: none; /* Make the wrapper not interfere with user interaction */
}

#loadingBar {
    position: absolute;
    bottom: 0; /* Position at the bottom of the wrapper */
    left: 0;
    width: 100%; /* Adjust based on loading progress */
    height: 0.2rem; /* Height of the loading bar */
    background-color: #007bff; /* Adjust the color as needed */
    /* No need for border-radius unless it's partially filled and visible */
}

/* Optional: Add a rainbow effect to your loading bar */
@keyframes rainbow {
    0% { background-color: red; }
    17% { background-color: orange; }
    34% { background-color: yellow; }
    51% { background-color: green; }
    68% { background-color: blue; }
    85% { background-color: indigo; }
    100% { background-color: violet; }
}

#loadingBar {
    animation: rainbow 2s linear infinite;
}



@media only screen and (min-width: 110rem) {
    #password-requirements {
        position: absolute;
        top: -9.5rem;
        left: 18.5rem;
        width: 15rem;
        z-index: 2;
        background-color: var(--container-color-light);
        border-radius: 1rem;
        transition: background-color 0.1s ease;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        padding: 1rem;
        z-index: 10; /* Ensure it's above other content */
    }

    .dark-mode #password-requirements {
        background-color: var(--container-color-dark);
        transition: background-color 0.1s ease;
    }
    

}

@media only screen and (max-width: 40rem) {
    html {
        font-size: 100%;
    }
}